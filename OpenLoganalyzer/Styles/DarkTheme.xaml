<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:OpenLoganalyzer.Styles">

    <Color x:Key="InvisibleColor">#00000000</Color>
    <Color x:Key="BackgroundColor">#FF232323</Color>
    <Color x:Key="ElementBackgroundColor">#4F4F4F</Color>
    <Color x:Key="ForegroundColor">#f7f7f7</Color>
    <Color x:Key="PlaceholderColor">#d3d3d3</Color>
    <Color x:Key="SuccessColor">#5cb85c</Color>
    <Color x:Key="WarningColor">#FFA500</Color>
    <Color x:Key="FailColor">#d9534f</Color>

    <Color x:Key="HoverColor">#D3D3D3</Color>
    <Color x:Key="PressedColor">#D3D3D3</Color>

    <Color x:Key="SuccessBorderColor">#00000000</Color>
    <Color x:Key="WarningBorderColor">#00000000</Color>
    <Color x:Key="FailBorderColor">#00000000</Color>
    <Color x:Key="HoverBorderColor">#D3D3D3</Color>
    <Color x:Key="PressedBorderColor">#D3D3D3</Color>

    <SolidColorBrush x:Key="InvisibleBrush"  Color="{StaticResource InvisibleColor}"/>
    <SolidColorBrush x:Key="BackgroundBrush"  Color="{StaticResource BackgroundColor}"/>
    <SolidColorBrush x:Key="ElementBackgroundBrush"  Color="{StaticResource ElementBackgroundColor}"/>
    <SolidColorBrush x:Key="ForegroundBrush"  Color="{StaticResource ForegroundColor}"/>
    <SolidColorBrush x:Key="PlaceholderBrush"  Color="{StaticResource PlaceholderColor}"/>

    <SolidColorBrush x:Key="SuccessBrush"  Color="{StaticResource SuccessColor}"/>
    <SolidColorBrush x:Key="WarningBrush"  Color="{StaticResource WarningColor}"/>
    <SolidColorBrush x:Key="FailBrush"  Color="{StaticResource FailColor}"/>
    <SolidColorBrush x:Key="HoverBrush"  Color="Gray"/>
    <SolidColorBrush x:Key="PressedBrush"  Color="{StaticResource PressedColor}"/>

    <SolidColorBrush x:Key="DefaultBorder"  Color="{StaticResource HoverColor}"/>
    <SolidColorBrush x:Key="SuccessBorder"  Color="{StaticResource SuccessBorderColor}"/>
    <SolidColorBrush x:Key="WarningBorder"  Color="{StaticResource WarningBorderColor}"/>
    <SolidColorBrush x:Key="FailBorder"  Color="{StaticResource FailBorderColor}"/>

    <Style x:Key="WindowStyle" TargetType="Window">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}"></Setter>
        <Setter Property="MinHeight" Value="450"></Setter>
        <Setter Property="MinWidth" Value="800"></Setter>
        <Setter Property="SizeToContent" Value="WidthAndHeight"></Setter>
    </Style>

    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Border" 
                                Grid.ColumnSpan="2"
                                Background="{StaticResource ElementBackgroundBrush}"
                                BorderBrush="{StaticResource DefaultBorder}"
                                BorderThickness="1" />
            <Border 
                              Grid.Column="0"
                              Margin="1" 
                              Background="{StaticResource ElementBackgroundBrush}" 
                              BorderBrush="{StaticResource ElementBackgroundBrush}"
                              BorderThickness="0,0,1,0" />
            <Path x:Name="Arrow"
                              Grid.Column="1"
                              Fill="{StaticResource ForegroundBrush}"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="M 0 0 L 4 4 L 8 0 Z"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource DefaultBorder}" />
                <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource ElementBackgroundBrush}" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="Blue" />
            </Trigger>
            <!--<Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource DisabledForegroundBrush}" />
                        </Trigger>-->
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <Style x:Key="InvisibleComboBox" TargetType="ComboBox">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter
                            Name="ContentSite"
                            IsHitTestVisible="False" 
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="3,3,23,3"
                            Focusable="True" 
                            Background="Transparent"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">
                            <Grid
                                Name="DropDown"
                                SnapsToDevicePixels="True"                
                                MinWidth="{TemplateBinding ActualWidth}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
                                    x:Name="DropDownBorder"
                                    Background="{StaticResource ElementBackgroundBrush}"
                                    BorderThickness="1"
                                    BorderBrush="{StaticResource DefaultBorder}"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="Red"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility"    Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>

    <Style x:Key="InvisibleMenu" TargetType="Menu">
        <Setter Property="Background" Value="{StaticResource InvisibleBrush}"></Setter>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"></Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <DockPanel HorizontalAlignment="Stretch" LastChildFill="True"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MenuItem" TargetType="MenuItem">
        <Setter Property="Background" Value="#00000000"></Setter>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"></Setter>
    </Style>
    <Style x:Key="MenuItemRight" BasedOn="{StaticResource MenuItem}" TargetType="MenuItem">
        <Setter Property="HorizontalAlignment" Value="Right"></Setter>
        <Setter Property="DockPanel.Dock" Value="Right"></Setter>
    </Style>
    <Style x:Key="SubMenuItem" TargetType="MenuItem">
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="LightGray"></Setter>
        <Setter Property="ContextMenu.Background" Value="{StaticResource BackgroundBrush}"></Setter>
        <Setter Property="ContextMenu.BorderBrush" Value="Black"></Setter>
    </Style>

    <Style x:Key="SperatorStyle" TargetType="Separator">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}"></Setter>
        <Setter Property="Foreground" Value="LightGray"></Setter>
    </Style>


    <Style x:Key="ListBoxStyle" TargetType="ListBox">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}"></Setter>
    </Style>

    <Style x:Key="ContextMenuStyle" TargetType="ContextMenu">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}"></Setter>
    </Style>

    <Style x:Key="Button" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource ElementBackgroundBrush}"></Setter>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"></Setter>
        <Setter Property="BorderBrush" Value="{StaticResource DefaultBorder}"></Setter>
        <Setter Property="Width" Value="Auto"></Setter>
        <Setter Property="Height" Value="20"></Setter>
    </Style>

    <Style x:Key="SuccessButton" TargetType="Button" BasedOn="{StaticResource Button}">
    </Style>
    <Style x:Key="WarningButton" TargetType="Button" BasedOn="{StaticResource Button}">
    </Style>
    <Style x:Key="FailButton" TargetType="Button" BasedOn="{StaticResource Button}">
    </Style>

    <Style x:Key="DefaultTextBox" TargetType="TextBox">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}"></Setter>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"></Setter>
    </Style>

    <Style x:Key="PlaceholderTextBox" TargetType="TextBox" BasedOn="{StaticResource DefaultTextBox}">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}"></Setter>
        <Setter Property="Foreground" Value="{StaticResource PlaceholderBrush}"></Setter>
    </Style>

</ResourceDictionary>